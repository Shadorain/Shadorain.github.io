{"expireTime":9007200850472567000,"key":"transformer-remark-markdown-html-ast-6f5116ec04454c81ed739aac61e1a614-gatsby-remark-codefencegatsby-remark-katexgatsby-remark-prismjsgatsby-remark-embed-youtube-","val":{"type":"root","children":[{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"General Setings","position":{"start":{"line":2,"column":4,"offset":4},"end":{"line":2,"column":19,"offset":19}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":19,"offset":19}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"To include some basics in your config first create a directory called general and a file called ","position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":97,"offset":117}}},{"type":"raw","value":"<code class=\"language-text\">settings.vim</code>","position":{"start":{"line":4,"column":97,"offset":117},"end":{"line":4,"column":111,"offset":131}}}],"position":{"start":{"line":4,"column":1,"offset":21},"end":{"line":4,"column":111,"offset":131}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      mkdir ~/.config/nvim/general\n\ntouch ~/.config/nvim/general/settings.vim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":6,"column":1,"offset":133},"end":{"line":10,"column":4,"offset":212}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Here is every general setting I use with a brief explanation:","position":{"start":{"line":12,"column":1,"offset":214},"end":{"line":12,"column":62,"offset":275}}}],"position":{"start":{"line":12,"column":1,"offset":214},"end":{"line":12,"column":62,"offset":275}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add the following to settings.vim","position":{"start":{"line":14,"column":1,"offset":277},"end":{"line":14,"column":34,"offset":310}}}],"position":{"start":{"line":14,"column":1,"offset":277},"end":{"line":14,"column":34,"offset":310}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      \" set leader key\nlet g:mapleader = \"\\<Space>\"\n\nsyntax enable                           \" Enables syntax highlighing\nset hidden                              \" Required to keep multiple buffers open multiple buffers\nset nowrap                              \" Display long lines as just one line\nset encoding=utf-8                      \" The encoding displayed\nset pumheight=10                        \" Makes popup menu smaller\nset fileencoding=utf-8                  \" The encoding written to file\nset ruler              \t\t\t            \" Show the cursor position all the time\nset cmdheight=2                         \" More space for displaying messages\nset iskeyword+=-                      \t\" treat dash separated words as a word text object\"\nset mouse=a                             \" Enable your mouse\nset splitbelow                          \" Horizontal splits will automatically be below\nset splitright                          \" Vertical splits will automatically be to the right\nset t_Co=256                            \" Support 256 colors\nset conceallevel=0                      \" So that I can see `` in markdown files\nset tabstop=2                           \" Insert 2 spaces for a tab\nset shiftwidth=2                        \" Change the number of space characters inserted for indentation\nset smarttab                            \" Makes tabbing smarter will realize you have 2 vs 4\nset expandtab                           \" Converts tabs to spaces\nset smartindent                         \" Makes indenting smart\nset autoindent                          \" Good auto indent\nset laststatus=0                        \" Always display the status line\nset number                              \" Line numbers\nset cursorline                          \" Enable highlighting of the current line\nset background=dark                     \" tell vim what the background color looks like\nset showtabline=2                       \" Always show tabs\nset noshowmode                          \" We don't need to see things like -- INSERT -- anymore\nset nobackup                            \" This is recommended by coc\nset nowritebackup                       \" This is recommended by coc\nset updatetime=300                      \" Faster completion\nset timeoutlen=500                      \" By default timeoutlen is 1000 ms\nset formatoptions-=cro                  \" Stop newline continution of comments\nset clipboard=unnamedplus               \" Copy paste between vim and everything else\n\"set autochdir                           \" Your working directory will always be the same as your working directory\n\nau! BufWritePost $MYVIMRC source %      \" auto source when writing to init.vm alternatively you can run :source $MYVIMRC\n\n\" You can't stop me\ncmap w!! w !sudo tee %\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":16,"column":1,"offset":312},"end":{"line":58,"column":4,"offset":3070}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Source in init.vim","position":{"start":{"line":60,"column":1,"offset":3072},"end":{"line":60,"column":19,"offset":3090}}}],"position":{"start":{"line":60,"column":1,"offset":3072},"end":{"line":60,"column":19,"offset":3090}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      source $HOME/.config/nvim/general/settings.vim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":62,"column":1,"offset":3092},"end":{"line":64,"column":4,"offset":3146}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Mapping new keys","position":{"start":{"line":66,"column":4,"offset":3151},"end":{"line":66,"column":20,"offset":3167}}}],"position":{"start":{"line":66,"column":1,"offset":3148},"end":{"line":66,"column":20,"offset":3167}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Again we'll create a directory called keys and and a file called mappings.vim","position":{"start":{"line":68,"column":1,"offset":3169},"end":{"line":68,"column":78,"offset":3246}}}],"position":{"start":{"line":68,"column":1,"offset":3169},"end":{"line":68,"column":78,"offset":3246}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      mkdir ~/.config/nvim/keys\n\ntouch ~/.config/nvim/keys/mappings.vim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":70,"column":1,"offset":3248},"end":{"line":74,"column":4,"offset":3321}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Add the following to mappings.vim:","position":{"start":{"line":76,"column":1,"offset":3323},"end":{"line":76,"column":35,"offset":3357}}}],"position":{"start":{"line":76,"column":1,"offset":3323},"end":{"line":76,"column":35,"offset":3357}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      \" Better nav for omnicomplete\ninoremap <expr> <c-j> (\"\\<C-n>\")\ninoremap <expr> <c-k> (\"\\<C-p>\")\n\n\" Use alt + hjkl to resize windows\nnnoremap <M-j>    :resize -2<CR>\nnnoremap <M-k>    :resize +2<CR>\nnnoremap <M-h>    :vertical resize -2<CR>\nnnoremap <M-l>    :vertical resize +2<CR>\n\n\" I hate escape more than anything else\ninoremap jk <Esc>\ninoremap kj <Esc>\n\n\" Easy CAPS\ninoremap <c-u> <ESC>viwUi\nnnoremap <c-u> viwU<Esc>\n\n\" TAB in general mode will move to text buffer\nnnoremap <TAB> :bnext<CR>\n\" SHIFT-TAB will go back\nnnoremap <S-TAB> :bprevious<CR>\n\n\" Alternate way to save\nnnoremap <C-s> :w<CR>\n\" Alternate way to quit\nnnoremap <C-Q> :wq!<CR>\n\" Use control-c instead of escape\nnnoremap <C-c> <Esc>\n\" <TAB>: completion.\ninoremap <expr><TAB> pumvisible() ? \"\\<C-n>\" : \"\\<TAB>\"\n\n\" Better tabbing\nvnoremap < <gv\nvnoremap > >gv\n\n\" Better window navigation\nnnoremap <C-h> <C-w>h\nnnoremap <C-j> <C-w>j\nnnoremap <C-k> <C-w>k\nnnoremap <C-l> <C-w>l\n\nnnoremap <Leader>o o<Esc>^Da\nnnoremap <Leader>O O<Esc>^Da\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":78,"column":1,"offset":3359},"end":{"line":123,"column":4,"offset":4370}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Source in init.vim","position":{"start":{"line":125,"column":1,"offset":4372},"end":{"line":125,"column":19,"offset":4390}}}],"position":{"start":{"line":125,"column":1,"offset":4372},"end":{"line":125,"column":19,"offset":4390}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      source $HOME/.config/nvim/keys/mappings.vim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":127,"column":1,"offset":4392},"end":{"line":129,"column":4,"offset":4443}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"Get healthy","position":{"start":{"line":131,"column":4,"offset":4448},"end":{"line":131,"column":15,"offset":4459}}}],"position":{"start":{"line":131,"column":1,"offset":4445},"end":{"line":131,"column":15,"offset":4459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Open ","position":{"start":{"line":133,"column":1,"offset":4461},"end":{"line":133,"column":6,"offset":4466}}},{"type":"raw","value":"<code class=\"language-text\">nvim</code>","position":{"start":{"line":133,"column":6,"offset":4466},"end":{"line":133,"column":12,"offset":4472}}},{"type":"text","value":" and enter the following:","position":{"start":{"line":133,"column":12,"offset":4472},"end":{"line":133,"column":37,"offset":4497}}}],"position":{"start":{"line":133,"column":1,"offset":4461},"end":{"line":133,"column":37,"offset":4497}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      :checkhealth\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":135,"column":1,"offset":4499},"end":{"line":137,"column":4,"offset":4519}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"You'll probably notice you don't have support for copy/paste also that python and node haven't been setup","position":{"start":{"line":139,"column":1,"offset":4521},"end":{"line":139,"column":106,"offset":4626}}}],"position":{"start":{"line":139,"column":1,"offset":4521},"end":{"line":139,"column":106,"offset":4626}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"So let's fix that","position":{"start":{"line":141,"column":1,"offset":4628},"end":{"line":141,"column":18,"offset":4645}}}],"position":{"start":{"line":141,"column":1,"offset":4628},"end":{"line":141,"column":18,"offset":4645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"First we'll fix copy/paste","position":{"start":{"line":143,"column":1,"offset":4647},"end":{"line":143,"column":27,"offset":4673}}}],"position":{"start":{"line":143,"column":1,"offset":4647},"end":{"line":143,"column":27,"offset":4673}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"On mac ","position":{"start":{"line":145,"column":3,"offset":4677},"end":{"line":145,"column":10,"offset":4684}}},{"type":"raw","value":"<code class=\"language-text\">pbcopy</code>","position":{"start":{"line":145,"column":10,"offset":4684},"end":{"line":145,"column":18,"offset":4692}}},{"type":"text","value":" should be builtin","position":{"start":{"line":145,"column":18,"offset":4692},"end":{"line":145,"column":36,"offset":4710}}}],"position":{"start":{"line":145,"column":1,"offset":4675},"end":{"line":146,"column":1,"offset":4711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On Ubuntu","position":{"start":{"line":147,"column":3,"offset":4714},"end":{"line":147,"column":12,"offset":4723}}}],"position":{"start":{"line":147,"column":3,"offset":4714},"end":{"line":147,"column":12,"offset":4723}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      sudo apt install xsel\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":149,"column":3,"offset":4727},"end":{"line":151,"column":6,"offset":4760}}},{"type":"text","value":"\n"}],"position":{"start":{"line":147,"column":1,"offset":4712},"end":{"line":152,"column":1,"offset":4761}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"On Arch Linux","position":{"start":{"line":153,"column":3,"offset":4764},"end":{"line":153,"column":16,"offset":4777}}}],"position":{"start":{"line":153,"column":3,"offset":4764},"end":{"line":153,"column":16,"offset":4777}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      sudo pacman -S xsel\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":155,"column":3,"offset":4781},"end":{"line":157,"column":6,"offset":4812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":153,"column":1,"offset":4762},"end":{"line":157,"column":6,"offset":4812}}},{"type":"text","value":"\n"}],"position":{"start":{"line":145,"column":1,"offset":4675},"end":{"line":157,"column":6,"offset":4812}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Next we need to install python support (node is optional)","position":{"start":{"line":159,"column":1,"offset":4814},"end":{"line":159,"column":58,"offset":4871}}}],"position":{"start":{"line":159,"column":1,"offset":4814},"end":{"line":159,"column":58,"offset":4871}}},{"type":"text","value":"\n"},{"type":"element","tagName":"ul","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Neovim python support","position":{"start":{"line":161,"column":3,"offset":4875},"end":{"line":161,"column":24,"offset":4896}}}],"position":{"start":{"line":161,"column":3,"offset":4875},"end":{"line":161,"column":24,"offset":4896}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      pip install pynvim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":163,"column":3,"offset":4900},"end":{"line":165,"column":6,"offset":4930}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":1,"offset":4873},"end":{"line":166,"column":1,"offset":4931}}},{"type":"text","value":"\n"},{"type":"element","tagName":"li","properties":{},"children":[{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Neovim node support","position":{"start":{"line":167,"column":3,"offset":4934},"end":{"line":167,"column":22,"offset":4953}}}],"position":{"start":{"line":167,"column":3,"offset":4934},"end":{"line":167,"column":22,"offset":4953}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      npm i -g neovim\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":169,"column":3,"offset":4957},"end":{"line":171,"column":6,"offset":4984}}},{"type":"text","value":"\n"}],"position":{"start":{"line":167,"column":1,"offset":4932},"end":{"line":171,"column":6,"offset":4984}}},{"type":"text","value":"\n"}],"position":{"start":{"line":161,"column":1,"offset":4873},"end":{"line":171,"column":6,"offset":4984}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"Note","position":{"start":{"line":173,"column":5,"offset":4990},"end":{"line":173,"column":9,"offset":4994}}}],"position":{"start":{"line":173,"column":1,"offset":4986},"end":{"line":173,"column":9,"offset":4994}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"If you use virtual environments I highly suggest putting these varibles in your config","position":{"start":{"line":175,"column":1,"offset":4996},"end":{"line":175,"column":87,"offset":5082}}}],"position":{"start":{"line":175,"column":1,"offset":4996},"end":{"line":175,"column":87,"offset":5082}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"I recommend putting this in paths.vim in the general directory","position":{"start":{"line":177,"column":1,"offset":5084},"end":{"line":177,"column":63,"offset":5146}}}],"position":{"start":{"line":177,"column":1,"offset":5084},"end":{"line":177,"column":63,"offset":5146}}},{"type":"text","value":"\n"},{"type":"raw","value":"<code-fence lang=\"null\" null>\n    <textarea vue-slot=\"code\">\n      let g:python3_host_prog = expand(\"<path to python with pynvim installed>\")\nlet g:python3_host_prog = expand(\"~/.miniconda/envs/neovim/bin/python3.8\") \" <- example\n\nlet g:node_host_prog = expand(\"<path to node with neovim installed>\")\nlet g:node_host_prog = expand(\"~/.nvm/versions/node/v12.16.1/bin/node\") \" <- example\n    </textarea>\n    </code-fence>\n  ","position":{"start":{"line":179,"column":1,"offset":5148},"end":{"line":185,"column":4,"offset":5474}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Run ","position":{"start":{"line":187,"column":1,"offset":5476},"end":{"line":187,"column":5,"offset":5480}}},{"type":"raw","value":"<code class=\"language-text\">checkhealth</code>","position":{"start":{"line":187,"column":5,"offset":5480},"end":{"line":187,"column":18,"offset":5493}}},{"type":"text","value":" again and you should now see the requirements are met","position":{"start":{"line":187,"column":18,"offset":5493},"end":{"line":187,"column":72,"offset":5547}}}],"position":{"start":{"line":187,"column":1,"offset":5476},"end":{"line":187,"column":72,"offset":5547}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":188,"column":1,"offset":5548}}}}